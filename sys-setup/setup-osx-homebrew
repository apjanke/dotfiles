#!/bin/bash
#
# Sets up Homebrew on this machine.
#
# This is idempotent, so you can rerun it on a machine that already has brew installed,
# though you may see (lots of) spurious warning messages. Each run does git fetches, so
# it requires a network connection even if everything is already set up.

set -e

PROGRAM_NAME="$(basename $0)"

function usage() {
  cat <<EOF
$PROGRAM_NAME - set up Homebrew and some formulae on this machine

Usage:
  $PROGRAM_NAME [-x]
  $PROGRAM_NAME -h
  $PROGRAM_NAME -n

Options:
    -x    trace program execution
    -h    display help
    -n    do not install any Casks
EOF
}

while getopts xh opt; do
  case $opt in
    x)
      OPT_TRACE=1
      ;;
    n)
      NO_CASKS=1
      ;;
    h)
      usage
      exit 0
      ;;
    \?)
      echo >&2 "See '$PROGRAM_NAME -h' for usage"
      exit 1
      ;;
  esac
done

function _do() {
  echo "$@"
  "$@"
}

function ensure_github_user_fork_remote() {
  USERNAME=$1
  REPO=$2
  if ! git remote get-url $USERNAME &>/dev/null; then
    _do git remote add $USERNAME https://github.com/$USERNAME/$REPO.git
  fi
}

function main() {

THISDIR="$( dirname "${BASH_SOURCE[0]}" )"
GITHUB_USERNAME=apjanke
my_brew_cfg_dir="$THISDIR/homebrew"

# Prerequisites

# Check for Xcode or CLT
if ! xcode-select -p >/dev/null; then
  cat >&2 <<EOF
Error: Neither Xcode nor CLT are installed. Please install one.
  To install CLT:  sudo xcode-select --install
  To do Xcode:     Install Xcode and then run:
     sudo xcode-select -s /Applications/Xcode-<version>.app
EOF
  exit 1
fi

# Install Homebrew
(
if [[ -z $(which brew) ]]; then
  INSTALLER_URL=https://raw.githubusercontent.com/Homebrew/install/master/install
  ruby -e "$(curl -fsSL $INSTALLER_URL)"
else
  echo "Homebrew is already installed."
fi
cd $(brew --repo)
if [[ -e .git/shallow ]]; then
  git fetch --unshallow
fi
ensure_github_user_fork_remote $GITHUB_USERNAME brew
git fetch --all
cd "$(brew --prefix)/Homebrew/Library/Taps/homebrew/homebrew-core"
if [[ -e .git/shallow ]]; then
  git fetch --unshallow
fi
ensure_github_user_fork_remote $GITHUB_USERNAME homebrew-core
git fetch --all
)

# Pick what to install
if [[ -e "$my_brew_cfg_dir" ]]; then
  echo "Found brew config dir at $my_brew_cfg_dir"
  taps=($(cat "$my_brew_cfg_dir/brew-taps-standard"))
  formulae=($(cat "$my_brew_cfg_dir/brew-formulae-standard"))
  casks=($(cat "$my_brew_cfg_dir/brew-casks-standard"))
  if [[ $NO_CASKS = 1 ]]; then
      casks=()
  fi
else
  echo "No brew config dir found at '$my_brew_cfg_dir'; Using defaults"
  # Common defaults
  taps=( apjanke/personal )
  formulae=( bash zsh browser duti wget dos2unix fortune git pstree tree watch )
  casks=()
fi

# Install taps
for tap in "${taps[@]}"; do
  tap_base_name=homebrew-$(basename $tap)
  tap_owner_name=$(dirname $tap)
  _do brew tap --full $tap
  cd $(brew --prefix)/Homebrew/Library/Taps/$tap_owner_name/$tap_base_name
  ensure_github_user_fork_remote $GITHUB_USERNAME $tap_base_name
  git fetch --all
done

# Install formulae and casks

# Do casks first so Java gets picked up; it is a dependency of some formulae
for cask in "${casks[@]}"; do
  _do brew cask install $cask
done

_do brew install "${formulae[@]}"


}

main

